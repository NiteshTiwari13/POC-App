// pages/plans.js

import { useState } from 'react';
import { connectToDatabase } from '../util/mongodb';
import Subscription from '../util/subscriptionModel';

const Plans = ({ plans }) => {
  const [selectedPlan, setSelectedPlan] = useState(null);
  const [billingInterval, setBillingInterval] = useState('monthly');

  const handleSelectPlan = (plan) => {
    setSelectedPlan(plan);
  };

  const handleSelectBillingInterval = (interval) => {
    setBillingInterval(interval);
  };

  // You can continue implementing the rest of your subscription flow here

  return (
    <div>
      <h1>Available Subscription Plans</h1>
      <ul>
        {plans.map((plan) => (
          <li key={plan._id}>
            <h2>{plan.name}</h2>
            <p>{plan.description}</p>
            <p>Price: ${plan.price.toFixed(2)} / {plan.interval}</p>
            <button onClick={() => handleSelectPlan(plan)}>Select Plan</button>
          </li>
        ))}
      </ul>

      {selectedPlan && (
        <div>
          <h2>Selected Plan: {selectedPlan.name}</h2>
          <p>Description: {selectedPlan.description}</p>
          <p>Price: ${selectedPlan.price.toFixed(2)} / {billingInterval}</p>

          <div>
            <label>
              Billing Interval:
              <select
                value={billingInterval}
                onChange={(e) => handleSelectBillingInterval(e.target.value)}
              >
                <option value="monthly">Monthly</option>
                <option value="yearly">Yearly</option>
              </select>
            </label>
          </div>

          {/* Continue with the rest of your subscription flow, e.g., collecting credit card information */}
        </div>
      )}
    </div>
  );
};

export const getStaticProps = async () => {
  try {
    await connectToDatabase();

    const plans = await Subscription.find();

    return {
      props: { plans: JSON.parse(JSON.stringify(plans)) },
    };
  } catch (error) {
    console.error('Error fetching subscription plans:', error);
    return {
      props: { plans: [] },
    };
  }
};

export default Plans;
